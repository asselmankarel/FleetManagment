// <auto-generated />
using System;
using Fleetmanagement.IdentityProvider.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fleetmanagement.IdentityProvider.Migrations.IdentityDb
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20210714092108_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fleetmanagement.IdentityProvider.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8980b9c-a72a-4ce8-b084-ee934c09d9c7"),
                            ConcurrencyStamp = "bcce2bc6-fee3-4a99-94aa-c7efa5e1abb5",
                            Email = "karel.asselman@allphi.eu",
                            IsActive = true,
                            Password = "Pass123$",
                            Subject = "962d2a3c-6c11-47bb-8453-a41485baee8a"
                        });
                });

            modelBuilder.Entity("Fleetmanagement.IdentityProvider.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e83a31b-7609-43ce-b1e9-dbe3eac21726"),
                            ConcurrencyStamp = "44240753-3f40-4d0f-9b08-18fe617d6d8f",
                            Type = "name",
                            UserId = new Guid("d8980b9c-a72a-4ce8-b084-ee934c09d9c7"),
                            Value = "Karel Asselman"
                        },
                        new
                        {
                            Id = new Guid("67c40e5d-9ccd-481e-98b8-10ea3b07c7ef"),
                            ConcurrencyStamp = "f9235a42-d30d-4588-b56e-94f937b71c15",
                            Type = "given_name",
                            UserId = new Guid("d8980b9c-a72a-4ce8-b084-ee934c09d9c7"),
                            Value = "Karel"
                        },
                        new
                        {
                            Id = new Guid("5a4394af-e982-40f6-b735-43aa7a147f51"),
                            ConcurrencyStamp = "bd990066-8661-4848-b99c-0c4a660c465d",
                            Type = "family_name",
                            UserId = new Guid("d8980b9c-a72a-4ce8-b084-ee934c09d9c7"),
                            Value = "Asselman"
                        });
                });

            modelBuilder.Entity("Fleetmanagement.IdentityProvider.Entities.UserClaim", b =>
                {
                    b.HasOne("Fleetmanagement.IdentityProvider.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fleetmanagement.IdentityProvider.Entities.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
